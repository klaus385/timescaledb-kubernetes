image:
  repository: ghcr.io/parca-dev/parca-agent
  tag: "{{ .Chart.AppVersion }}"
  pullPolicy: IfNotPresent

# Override the namespace for all objects
namespaceOverride: ""

# Arguments that will be passed onto daemonset pods
extraArgs:
  - --log-level=info
  - --debuginfo-strip
  - --debuginfo-temp-dir=/tmp
  - --debuginfo-upload-cache-duration=5m
  # Use the following args to configure the address for Parca Server.
  # - --remote-store-address=parca-server.parca.svc.cluster.local:7070
  # - --remote-store-insecure
  # - --remote-store-insecure-skip-verify

# Environment variables that will be passed onto daemonset pods
extraEnv: []

# Extra volumes to be able to add extra files like certificates for example, to start a TLS server.
# More info about volumes: https://kubernetes.io/docs/concepts/storage/volumes/
extraVolumes: []
#   - name: certs
#     configMap:
#       name: parca-tls-certs

extraVolumeMounts: []
#   - name: parca-tls-certs
#     mountPath: "/etc/parca-agent/tls"
#     readOnly: true

# Annotations to be added to the parca-agent DaemonSet
annotations: {}

# Annotations to be added to the parca-agent Pods
podAnnotations: {}

# Set custom resource limits.
resources: {}

# Set custom security context for parca-server pods.
podSecurityContext:
  privileged: true
  readOnlyRootFilesystem: true

# Values for defining the Kubernetes Service.
service:
  # One of (ClusterIP | LoadBalancer | NodePort).
  type: ClusterIP
  # The port used by the service.
  port: 7071
  # Optional NodePort, only used for type `NodePort`.
  nodePort: null
  # Additional labels to be added to the Service.
  labels: {}
  # Additional annotations to be added to the Service.
  annotations: {}
  # Define extra fields to be interpolated into the Service spec.
  #
  # This allows for adding support for new features and functionality which may not yet
  # be directly supported in this chart.
  spec: {}
  # loadBalancerSourceRanges:
  # - "0.0.0.0/0"

podSecurityPolicy:
  enabled: true

serviceAccount:
  # Specifies whether a ServiceAccount should be created
  create: true
  # The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the fullname template
  name:
  # A map of annotations to be set on the ServiceAccount
  annotations: {}

# Set a custom readiness probe e.g. when basic auth is enabled.
readinessProbe:
  httpGet:
    path: /ready
    port: http

# Set a custom liveness probe e.g. when basic auth is enabled.
livenessProbe:
  httpGet:
    path: /healthy
    port: http

# https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
nodeSelector:
  kubernetes.io/os: linux

# https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations:
  - operator: Exists

# https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
affinity: {}
